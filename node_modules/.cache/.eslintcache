[{"/Users/quocdang/Desktop/ToDo/src/index.tsx":"1","/Users/quocdang/Desktop/ToDo/src/App.tsx":"2","/Users/quocdang/Desktop/ToDo/src/container/Home/index.tsx":"3","/Users/quocdang/Desktop/ToDo/src/container/Login/index.tsx":"4","/Users/quocdang/Desktop/ToDo/src/container/Login/until.ts":"5","/Users/quocdang/Desktop/ToDo/src/container/Login/styles.ts":"6","/Users/quocdang/Desktop/ToDo/src/container/Home/TodoItems.tsx":"7","/Users/quocdang/Desktop/ToDo/src/container/Home/style.ts":"8","/Users/quocdang/Desktop/ToDo/src/container/Home/Loading.tsx":"9","/Users/quocdang/Desktop/ToDo/src/container/Home/Logout.tsx":"10","/Users/quocdang/Desktop/ToDo/src/container/Home/Add/until.ts":"11","/Users/quocdang/Desktop/ToDo/src/container/Home/Alert/AlertError.tsx":"12","/Users/quocdang/Desktop/ToDo/src/container/Home/UpdateTask/CheckBox.tsx":"13","/Users/quocdang/Desktop/ToDo/src/container/Home/UpdateTask/until.tsx":"14","/Users/quocdang/Desktop/ToDo/src/container/Home/Delete/until.tsx":"15","/Users/quocdang/Desktop/ToDo/src/container/Home/Alert/AlertSuccess.tsx":"16","/Users/quocdang/Desktop/ToDo/src/container/Home/Add/AddTask.tsx":"17"},{"size":422,"mtime":1654975399000,"results":"18","hashOfConfig":"19"},{"size":1057,"mtime":1655449097257,"results":"20","hashOfConfig":"19"},{"size":5437,"mtime":1655450492763,"results":"21","hashOfConfig":"19"},{"size":4745,"mtime":1654975399000,"results":"22","hashOfConfig":"19"},{"size":359,"mtime":1654975399000,"results":"23","hashOfConfig":"19"},{"size":1283,"mtime":1654975399000,"results":"24","hashOfConfig":"19"},{"size":524,"mtime":1655437681441,"results":"25","hashOfConfig":"19"},{"size":1767,"mtime":1655449600242,"results":"26","hashOfConfig":"19"},{"size":294,"mtime":1655435477051,"results":"27","hashOfConfig":"19"},{"size":524,"mtime":1655449427484,"results":"28","hashOfConfig":"19"},{"size":360,"mtime":1655449348915,"results":"29","hashOfConfig":"19"},{"size":978,"mtime":1655450458851,"results":"30","hashOfConfig":"19"},{"size":1056,"mtime":1655367854738,"results":"31","hashOfConfig":"19"},{"size":365,"mtime":1655448366422,"results":"32","hashOfConfig":"19"},{"size":300,"mtime":1655448444673,"results":"33","hashOfConfig":"19"},{"size":984,"mtime":1655450390775,"results":"34","hashOfConfig":"19"},{"size":738,"mtime":1655447830683,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"19pparx",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/quocdang/Desktop/ToDo/src/index.tsx",[],[],[],"/Users/quocdang/Desktop/ToDo/src/App.tsx",["91"],[],"/Users/quocdang/Desktop/ToDo/src/container/Home/index.tsx",["92"],[],"/Users/quocdang/Desktop/ToDo/src/container/Login/index.tsx",["93","94","95","96","97","98"],[],"import { Box, Button, CircularProgress, Grid, Stack } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\n// import OutlinedInput from \"@mui/material/OutlinedInput\";\n// import InputAdornment from \"@mui/material/InputAdornment\";\n// import IconButton from \"@mui/material/IconButton\";\n// import VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport useStyles from \"./styles\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { getApi } from \"./until\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n// import { LoadingButton } from '@mui/lab';\nimport { Formik, Form, Field, useFormik } from \"formik\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\n\nfunction Login() {\n  const classes = useStyles();\n  // const [email, setEmail] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n  const [error , setError] = useState('')\n  let history = useHistory();\n\n  // const handleChangeEmail = (e) => {\n  //   setEmail(e.target.value);\n  // };\n\n  // const handleChangePassword = (e) => {\n  //   setPassword(e.target.value);\n  // };\n\n  // const handleLogin = async () => {\n  //   console.log(\"da clock \");\n\n    // setChecked(true);\n    // const response = await getApi(email, password);\n    // console.log(\"response file index\", response);\n    // localStorage.setItem(\"token\", response);\n    // history.push(\"/home\");\n  // };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email().min(7).max(255).required(),\n      password: Yup.string().min(7).max(255).required(),\n    }),\n    onSubmit: async (values) => {\n      setChecked(true);\n\n      try {\n        const response = await getApi(values.email, values.password);\n        localStorage.setItem(\"token\", response);\n        console.log(\"response file index\", response);\n        // console.log(\"erros\", response.request.status);\n        history.push(\"/home\");\n      } catch (error) {\n        // console.log('error', error.response.data)\n        setError(error.response.data);\n      }\n\n    },\n  });\n\n  return (\n    <div className={classes.wrapper}>\n      <Grid className={classes.wrapperColumn} container spacing={2}>\n        <Grid className={classes.columnLeft} item xs={6}>\n          <Box className={classes.wrapper_content}>\n            <div className={classes.introduce}>\n              <div className={classes.title}>\n                <h2>Sign in to</h2>\n                <h3>Lorem Ipsum is sipmly</h3>\n              </div>\n              <div className={classes.content}>\n                <p>If you don't have an account register</p>\n                <p>\n                  You can <a href=\"\">Register here !</a>\n                </p>\n              </div>\n            </div>\n          </Box>\n        </Grid>\n\n        <Grid item xs={6}>\n          <Box className={classes.formInput}>\n            <h3>Sign in</h3>\n            <form onSubmit={formik.handleSubmit}>\n              <TextField\n                // onChange={() => handleChangeEmail}\n                fullWidth\n                onBlur={formik.handleBlur}\n                onChange={formik.handleChange}\n                className={classes.mailInput}\n                placeholder=\"Enter your email\"\n                label=\"Your email\"\n                value={formik.values.email}\n                name=\"email\"\n                error={Boolean(formik.touched.email && formik.errors.email)}\n                helperText={formik.touched.email && formik.errors.email}\n              />\n              <br></br>\n\n              <TextField\n                // onChange={() => handleChangePassword}\n                className={classes.passwordInput}\n                onBlur={formik.handleBlur}\n                placeholder=\"Password\"\n                label=\"Password\"\n                name=\"password\"\n                onChange={formik.handleChange}\n                value={formik.values.password}\n                error={Boolean(\n                  formik.touched.password && formik.errors.password\n                )}\n                helperText={formik.touched.password && formik.errors.password}\n              />\n              <p className={classes.contentPassword}>forgot password ?</p>\n              \n              <div >\n              <Button \n                className={classes.submitBtn} type=\"submit\" variant=\"contained\" \n                >\n                {checked ? <CircularProgress /> : \"Login\"}\n              </Button>\n                <p className={classes.notiContent}>{error}</p>\n              </div>\n            </form>\n          </Box>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/quocdang/Desktop/ToDo/src/container/Login/until.ts",["99"],[],"import { json } from 'stream/consumers';\nimport axios from \"axios\";\n\nexport const getApi= async(email, password) => {\n        const res = await axios.post('https://api-nodejs-todolist.herokuapp.com/user/login',{\n                \"email\": email, \n                \"password\" :password\n        });\n        console.log(\"res\", res)\n        return res.data.token;\n}\n","/Users/quocdang/Desktop/ToDo/src/container/Login/styles.ts",["100","101"],[],"import { makeStyles } from \"@mui/styles\";\nimport { textAlign } from \"@mui/system\";\nimport { wrap } from \"module\";\n\nconst useStyles = makeStyles(() => ({\n    wrapper: {\n        height: \"100vh\",\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: \"auto\"\n    },\n\n    wrapperColumn: {\n        maxWidth: \"1024px\",\n        margin: \"auto\"\n    },\n\n    columnLeft: {\n        margin: \"auto\"\n    },\n\n    wrapper_content: {\n\n    },\n\n    title: {\n        marginBottom: \"40px\"\n    },\n\n    content: {\n        opacity: \"0.5\",\n        fontSize: \"small\",\n    },\n\n    introduce: {\n        textAlign: \"left\"\n    },\n\n    formInput: {\n\n    },\n\n    mailInput: {\n        width: \"231px\",\n        // backgroundColor: \"#e280cc78\",\n        marginBottom: \"20px\"\n    },\n\n    passwordInput: {\n        // backgroundColor: \"#e280cc78\",\n        width: \"231px\"\n    },\n\n    submitBtn: {\n        padding: \"12px 92px\",\n        // borderRadius: \"5px\",\n        // border: \"1px solid\",\n    },\n\n    contentPassword: {\n        opacity: \"0.5\",\n        fontSize: \"small\",\n    },\n\n    notiContent: {\n        color: \"#e01010\"\n    },\n\n    \n    // submitBtn: {\n    //     fontSize: \"18px\",\n    //     color: \"#fff\",\n    // }\n\n}));\n\nexport default useStyles","/Users/quocdang/Desktop/ToDo/src/container/Home/TodoItems.tsx",[],[],"/Users/quocdang/Desktop/ToDo/src/container/Home/style.ts",[],[],"/Users/quocdang/Desktop/ToDo/src/container/Home/Loading.tsx",[],[],"/Users/quocdang/Desktop/ToDo/src/container/Home/Logout.tsx",[],[],"/Users/quocdang/Desktop/ToDo/src/container/Home/Add/until.ts",[],[],"/Users/quocdang/Desktop/ToDo/src/container/Home/Alert/AlertError.tsx",[],[],"/Users/quocdang/Desktop/ToDo/src/container/Home/UpdateTask/CheckBox.tsx",[],[],"/Users/quocdang/Desktop/ToDo/src/container/Home/UpdateTask/until.tsx",[],[],"/Users/quocdang/Desktop/ToDo/src/container/Home/Delete/until.tsx",[],[],"/Users/quocdang/Desktop/ToDo/src/container/Home/Alert/AlertSuccess.tsx",[],[],"/Users/quocdang/Desktop/ToDo/src/container/Home/Add/AddTask.tsx",[],[],{"ruleId":"102","severity":1,"message":"103","line":12,"column":9,"nodeType":"104","messageId":"105","endLine":12,"endColumn":16},{"ruleId":"102","severity":1,"message":"106","line":2,"column":21,"nodeType":"104","messageId":"105","endLine":2,"endColumn":27},{"ruleId":"102","severity":1,"message":"107","line":1,"column":47,"nodeType":"104","messageId":"105","endLine":1,"endColumn":52},{"ruleId":"102","severity":1,"message":"108","line":8,"column":8,"nodeType":"104","messageId":"105","endLine":8,"endColumn":21},{"ruleId":"102","severity":1,"message":"109","line":13,"column":10,"nodeType":"104","messageId":"105","endLine":13,"endColumn":16},{"ruleId":"102","severity":1,"message":"110","line":13,"column":18,"nodeType":"104","messageId":"105","endLine":13,"endColumn":22},{"ruleId":"102","severity":1,"message":"111","line":13,"column":24,"nodeType":"104","messageId":"105","endLine":13,"endColumn":29},{"ruleId":"112","severity":1,"message":"113","line":82,"column":27,"nodeType":"114","endLine":82,"endColumn":38},{"ruleId":"102","severity":1,"message":"115","line":1,"column":10,"nodeType":"104","messageId":"105","endLine":1,"endColumn":14},{"ruleId":"102","severity":1,"message":"116","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":19},{"ruleId":"102","severity":1,"message":"117","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":14},"@typescript-eslint/no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Stack' is defined but never used.","'VisibilityOff' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'Field' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'json' is defined but never used.","'textAlign' is defined but never used.","'wrap' is defined but never used."]