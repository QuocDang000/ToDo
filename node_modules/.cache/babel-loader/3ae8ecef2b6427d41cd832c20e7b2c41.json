{"ast":null,"code":"var _jsxFileName = \"/Users/quocdang/Desktop/ToDo/src/container/Home/UpdateTask/CheckBox.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { updateTask } from \"./until\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ControlledCheckbox(_ref) {\n  _s();\n\n  let {\n    id,\n    status,\n    handleUpdatePost\n  } = _ref;\n  const [checked, setChecked] = React.useState(status);\n  console.log('check', checked);\n  const [success, setSuccess] = React.useState(false);\n\n  const handleChangeCheckBox = e => {\n    setChecked(e.target.checked);\n\n    try {\n      updateTask(id, status);\n      setSuccess(true);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: checked,\n      onChange: handleChangeCheckBox,\n      inputProps: {\n        \"aria-label\": \"controlled\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ControlledCheckbox, \"1RtHCRwoMI7JZLburddS0ZgB+VA=\");\n\n_c = ControlledCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlledCheckbox\");","map":{"version":3,"names":["React","Checkbox","updateTask","ControlledCheckbox","id","status","handleUpdatePost","checked","setChecked","useState","console","log","success","setSuccess","handleChangeCheckBox","e","target","error"],"sources":["/Users/quocdang/Desktop/ToDo/src/container/Home/UpdateTask/CheckBox.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { updateTask } from \"./until\";\n\nexport default function ControlledCheckbox({\n  id,\n  status,\n  handleUpdatePost,\n}: any) {\n  const [checked, setChecked] = React.useState(status);\n  console.log('check', checked);\n  \n  const [success, setSuccess] = React.useState(false);\n\n  const handleChangeCheckBox = (e) => {\n    setChecked(e.target.checked);\n    try {\n      updateTask(id, status);\n      setSuccess(true);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  return (\n    <div>\n      <Checkbox\n        checked={checked}\n        onChange={handleChangeCheckBox}\n        inputProps={{ \"aria-label\": \"controlled\" }}\n      />\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,SAA3B;;AAEA,eAAe,SAASC,kBAAT,OAIP;EAAA;;EAAA,IAJmC;IACzCC,EADyC;IAEzCC,MAFyC;IAGzCC;EAHyC,CAInC;EACN,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACS,QAAN,CAAeJ,MAAf,CAA9B;EACAK,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,OAArB;EAEA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBb,KAAK,CAACS,QAAN,CAAe,KAAf,CAA9B;;EAEA,MAAMK,oBAAoB,GAAIC,CAAD,IAAO;IAClCP,UAAU,CAACO,CAAC,CAACC,MAAF,CAAST,OAAV,CAAV;;IACA,IAAI;MACFL,UAAU,CAACE,EAAD,EAAKC,MAAL,CAAV;MACAQ,UAAU,CAAC,IAAD,CAAV;IACD,CAHD,CAGE,OAAOI,KAAP,EAAc;MACdP,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBM,KAArB;IACD;EACF,CARD;;EAUA,oBACE;IAAA,uBACE,QAAC,QAAD;MACE,OAAO,EAAEV,OADX;MAEE,QAAQ,EAAEO,oBAFZ;MAGE,UAAU,EAAE;QAAE,cAAc;MAAhB;IAHd;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GA7BuBX,kB;;KAAAA,kB"},"metadata":{},"sourceType":"module"}