{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport useStyles from \"./style\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\"; // import Pagination from \"./Pagination\";\n\nimport { postTask } from \"./Add/until\";\nimport { deleteTask } from \"./Delete/until\";\nimport { render } from \"react-dom\"; // import Pagination from \"./Pagination\";\n\nfunction HomePage() {\n  _s();\n\n  const classes = useStyles();\n  const [posts, setPosts] = useState([]);\n  const [pageCount, setPageCount] = useState(1);\n  const [checked, setChecked] = useState(true);\n  const [itemNumber, setItemNumber] = useState(10);\n  const [task, setTask] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [completed, setCompleted] = useState(false);\n  console.log(\"abc\", completed); // const [tasks, setTasks] = useState([]);\n\n  const [isAdd, setIsAdd] = useState(false); // console.log(\"task\", task);\n  // console.log(\"error\", error);\n  // console.log(\"success\", success);\n  // console.log(\"tasks\", tasks);\n  // var storageTask = JSON.parse(localStorage.getItem(\"task\"));\n  // console.log(\"storage\", storageTask);\n  // const [pagination, setPagination] = useState({\n  //     skip: 1,\n  //     limit: 10,\n  // })\n  // console.log(\"posts\", posts);\n  // console.log(\"pageCount\", pageCount);\n  // const handleChange = (e) => {\n  //   setItemNumber(e.target.value);\n  //   setChecked(true);\n  // };\n  // const handleClickNext = async () => {\n  //   setPageCount((pageCount) => pageCount + 1);\n  //   setChecked(true);\n  //   console.log(\"Next\");\n  // };\n  // const handleClickPrev = async () => {\n  //   setPageCount((pageCount) => pageCount - 1);\n  //   setChecked(true);\n  //   console.log(\"Prev\");\n  // };\n\n  const handleChangePage = (event, newPage) => {\n    setPageCount(newPage);\n    setChecked(true);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setItemNumber(parseInt(event.target.value, 10));\n    setPageCount(0);\n    setChecked(true);\n  }; // const handleChange = (e) => {\n  //   setTask(e.target.value)\n  //   console.log(\"value\");\n  // }\n\n\n  const handleAddTask = async () => {\n    // values.preventDefault();\n    // setTasks((prev) => {\n    //   const newTask = [...prev, task];\n    //   return newTask;\n    // });\n    // setTasks((prev) => [...prev, task]);\n    // setTask(e.target.value)\n    setIsAdd(true); // setSuccess(\"\");\n\n    setTask(\"\");\n\n    try {\n      const response = await postTask(task); // console.log(\"response file index\", response.data.data.description);\n\n      setSuccess(true); // setSuccess(response);\n    } catch (error) {\n      setError(true);\n    }\n  }; // const handleDelete = (index: number) => {\n  //   console.log(index);\n  //   const newPosts = [...posts];\n  //   newPosts.splice(index, 1);\n  //   setPosts(newPosts);\n  //   return newPosts;\n  // };\n  // const handleDelete = async ({item, id}: any) => {\n  //   setPosts(prev => {\n  //     const newPosts = prev.filter((post, i) => {\n  //       if(i !== id)\n  //         return post\n  //     })\n  //     console.log(\"abcd\");\n  //     return newPosts\n  //   })\n  // }\n\n\n  const handleDelete = async id => {\n    console.log(\"thisIsID\", id);\n    const newPosts = [...posts];\n    newPosts.splice(id, 1);\n    setPosts(newPosts);\n\n    try {\n      const response = await deleteTask(id);\n      console.log(\"response file index\", response); //   console.log('id' ,id);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  useEffect(() => {\n    async function getListTask() {\n      const data = await axios.get(`https://api-nodejs-todolist.herokuapp.com/task?limit=${itemNumber}&skip=${pageCount}`, {\n        headers: {\n          Authorization: localStorage.token\n        }\n      });\n      setChecked(false);\n      setPosts(data.data.data);\n      return data;\n    }\n\n    getListTask();\n  }, [pageCount, itemNumber, isAdd]);\n  render();\n}\n\n_s(HomePage, \"6ZEjzlNBorYxaP3YwjuC7kaiR2I=\", false, function () {\n  return [useStyles];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["useStyles","useState","useEffect","axios","postTask","deleteTask","render","HomePage","classes","posts","setPosts","pageCount","setPageCount","checked","setChecked","itemNumber","setItemNumber","task","setTask","tasks","setTasks","error","setError","success","setSuccess","completed","setCompleted","console","log","isAdd","setIsAdd","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleAddTask","response","handleDelete","id","newPosts","splice","getListTask","data","get","headers","Authorization","localStorage","token"],"sources":["/Users/quocdang/Desktop/ToDo/src/container/Home/index.tsx"],"sourcesContent":["import useStyles from \"./style\";\nimport {\n  Grid,\n  Box,\n  Button,\n  FormControl,\n  MenuItem,\n  InputLabel,\n  Select,\n  Modal,\n} from \"@mui/material\";\nimport TablePagination from \"@mui/material/TablePagination\";\n// import Skeleton from \"react-loading-skeleton\";\nimport PanToolIcon from \"@mui/icons-material/PanTool\";\nimport AddBoxIcon from \"@mui/icons-material/AddBox\";\nimport TodoItem from \"./TodoItems\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { json } from \"stream/consumers\";\nimport Logout from \"./Logout\";\nimport axios from \"axios\";\n// import Pagination from \"./Pagination\";\nimport LoadingButton from \"./Loading\";\n// import LoadingButton from \"@mui/lab/LoadingButton\";\nimport Skeleton from \"@mui/material/Skeleton\";\nimport ButtonComponent from \"./Add\";\nimport AddTask from \"./Add\";\nimport { postTask } from \"./Add/until\";\nimport { Description } from \"@mui/icons-material\";\nimport Alert from \"@mui/material/Alert\";\nimport AlertTitle from \"@mui/material/AlertTitle\";\nimport Stack from \"@mui/material/Stack\";\nimport ActionAlertsError from \"./Alert/AlertError\";\nimport TransitionAlerts from \"./Alert/AlertError\";\nimport TransitionAlertsError from \"./Alert/AlertError\";\nimport TransitionAlertsSuccess from \"./Alert/AlertSuccess\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { deleteTask } from \"./Delete/until\";\nimport { render } from \"react-dom\";\n\n// import Pagination from \"./Pagination\";\n\nfunction HomePage() {\n  const classes = useStyles();\n  const [posts, setPosts] = useState([]);\n  const [pageCount, setPageCount] = useState(1);\n  const [checked, setChecked] = useState(true);\n  const [itemNumber, setItemNumber] = useState(10);\n  const [task, setTask] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [completed, setCompleted] = useState(false);\n  console.log(\"abc\", completed);\n\n  // const [tasks, setTasks] = useState([]);\n\n  const [isAdd, setIsAdd] = useState(false);\n\n  // console.log(\"task\", task);\n  // console.log(\"error\", error);\n  // console.log(\"success\", success);\n\n  // console.log(\"tasks\", tasks);\n\n  // var storageTask = JSON.parse(localStorage.getItem(\"task\"));\n  // console.log(\"storage\", storageTask);\n\n  // const [pagination, setPagination] = useState({\n  //     skip: 1,\n  //     limit: 10,\n  // })\n\n  // console.log(\"posts\", posts);\n  // console.log(\"pageCount\", pageCount);\n\n  // const handleChange = (e) => {\n  //   setItemNumber(e.target.value);\n  //   setChecked(true);\n  // };\n\n  // const handleClickNext = async () => {\n  //   setPageCount((pageCount) => pageCount + 1);\n  //   setChecked(true);\n\n  //   console.log(\"Next\");\n  // };\n\n  // const handleClickPrev = async () => {\n  //   setPageCount((pageCount) => pageCount - 1);\n  //   setChecked(true);\n\n  //   console.log(\"Prev\");\n  // };\n\n  const handleChangePage = (\n    event: React.MouseEvent<HTMLButtonElement> | null,\n    newPage: number\n  ) => {\n    setPageCount(newPage);\n    setChecked(true);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setItemNumber(parseInt(event.target.value, 10));\n    setPageCount(0);\n    setChecked(true);\n  };\n\n  // const handleChange = (e) => {\n  //   setTask(e.target.value)\n  //   console.log(\"value\");\n  // }\n\n \n\n  const handleAddTask = async () => {\n    // values.preventDefault();\n\n    // setTasks((prev) => {\n    //   const newTask = [...prev, task];\n    //   return newTask;\n    // });\n    // setTasks((prev) => [...prev, task]);\n\n    // setTask(e.target.value)\n    setIsAdd(true);\n    // setSuccess(\"\");\n\n    setTask(\"\");\n\n    try {\n      const response = await postTask(task);\n      // console.log(\"response file index\", response.data.data.description);\n      setSuccess(true);\n      // setSuccess(response);\n    } catch (error) {\n      setError(true);\n    }\n  };\n\n  // const handleDelete = (index: number) => {\n  //   console.log(index);\n  //   const newPosts = [...posts];\n  //   newPosts.splice(index, 1);\n  //   setPosts(newPosts);\n  //   return newPosts;\n  // };\n\n  // const handleDelete = async ({item, id}: any) => {\n  //   setPosts(prev => {\n  //     const newPosts = prev.filter((post, i) => {\n  //       if(i !== id)\n  //         return post\n  //     })\n  //     console.log(\"abcd\");\n      \n  //     return newPosts\n  //   })\n  // }\n\n  const handleDelete = async (id: any) => {\n    console.log(\"thisIsID\", id);\n    const newPosts = [...posts];\n    newPosts.splice(id, 1);\n    setPosts(newPosts);\n\n    try {\n      const response = await deleteTask(id);\n\n      console.log(\"response file index\", response);\n\n      //   console.log('id' ,id);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  useEffect(() => {\n    async function getListTask() {\n      const data: any = await axios.get(\n        `https://api-nodejs-todolist.herokuapp.com/task?limit=${itemNumber}&skip=${pageCount}`,\n        {\n          headers: {\n            Authorization: localStorage.token,\n          },\n        }\n      );\n      setChecked(false);\n\n      setPosts(data.data.data);\n\n      return data;\n    }\n    getListTask();\n  }, [pageCount, itemNumber, isAdd]);\n\n  render(\n\n  )\n\n  \n}\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}