{"ast":null,"code":"var _jsxFileName = \"/Users/quocdang/Desktop/ToDo/src/container/Home/UpdateTask/CheckBox.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport { updateTask } from './until';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ControlledCheckbox(props) {\n  _s();\n\n  const {\n    id,\n    status\n  } = props; // const [checked, setChecked] = React.useState(status);  \n\n  const [status1, setStatus] = React.useState(status); // console.log(\"checked\", checked);\n\n  const handleChange = async event => {\n    setStatus(true);\n    console.log('event', event);\n\n    try {\n      const response = await updateTask(id, status1);\n      console.log(\"response file index\", response.data.data.com); // console.log('id' ,id);\n      // console.log('stt', status)\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Checkbox, {\n    checked: status1,\n    onChange: handleChange,\n    inputProps: {\n      'aria-label': 'controlled'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ControlledCheckbox, \"PetmKMMZD2SQY0QvTraPYxIYPQ8=\");\n\n_c = ControlledCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlledCheckbox\");","map":{"version":3,"names":["React","Checkbox","updateTask","ControlledCheckbox","props","id","status","status1","setStatus","useState","handleChange","event","console","log","response","data","com","error"],"sources":["/Users/quocdang/Desktop/ToDo/src/container/Home/UpdateTask/CheckBox.tsx"],"sourcesContent":["import * as React from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport { updateTask } from './until';\n\nexport default function ControlledCheckbox(props: any) {\n  const { id , status } = props\n  // const [checked, setChecked] = React.useState(status);  \n  const [status1, setStatus] = React.useState(status)\n  // console.log(\"checked\", checked);\n  \n\n  const handleChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    setStatus(true);\n    \n    console.log('event' ,event);\n\n    try {\n      const response = await updateTask(id, status1);\n    \n      console.log(\"response file index\", response.data.data.com);\n  \n      // console.log('id' ,id);\n      // console.log('stt', status)\n      \n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n\n  return (\n    <Checkbox\n      checked={status1}\n      onChange={handleChange}\n      inputProps={{ 'aria-label': 'controlled' }}\n    />\n  );\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,SAA3B;;AAEA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAwC;EAAA;;EACrD,MAAM;IAAEC,EAAF;IAAOC;EAAP,IAAkBF,KAAxB,CADqD,CAErD;;EACA,MAAM,CAACG,OAAD,EAAUC,SAAV,IAAuBR,KAAK,CAACS,QAAN,CAAeH,MAAf,CAA7B,CAHqD,CAIrD;;EAGA,MAAMI,YAAY,GAAG,MAAOC,KAAP,IAAsD;IACzEH,SAAS,CAAC,IAAD,CAAT;IAEAI,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;;IAEA,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMZ,UAAU,CAACG,EAAD,EAAKE,OAAL,CAAjC;MAEAK,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCC,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBC,GAAtD,EAHE,CAKF;MACA;IAED,CARD,CAQE,OAAOC,KAAP,EAAc;MACdL,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,KAArB;IACD;EACF,CAhBD;;EAkBA,oBACE,QAAC,QAAD;IACE,OAAO,EAAEV,OADX;IAEE,QAAQ,EAAEG,YAFZ;IAGE,UAAU,EAAE;MAAE,cAAc;IAAhB;EAHd;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAhCuBP,kB;;KAAAA,kB"},"metadata":{},"sourceType":"module"}