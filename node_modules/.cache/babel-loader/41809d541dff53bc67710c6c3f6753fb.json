{"ast":null,"code":"var _jsxFileName = \"/Users/quocdang/Desktop/ToDo/src/container/Home/UpdateTask/CheckBox.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { updateTask } from \"./until\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ControlledCheckbox(_ref) {\n  _s();\n\n  let {\n    id,\n    status,\n    onUpdatePost,\n    posts\n  } = _ref;\n  const [checked, setChecked] = React.useState(status);\n\n  const handleChangeCheckBox = async e => {\n    setChecked(e.target.checked);\n    const newPosts = posts.map(post => {\n      if (post._id === id) {\n        post.completed = true;\n        status = post.completed;\n        console.log(\"abcd\");\n      } else {\n        post.completed = true;\n        status = post.completed;\n      }\n\n      return post;\n    });\n    onUpdatePost(newPosts);\n\n    try {\n      await updateTask(id, status);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n\n    console.log(\"statusss\", status);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: checked,\n      onChange: handleChangeCheckBox // onClick={handleUpdatePosts}\n      ,\n      inputProps: {\n        \"aria-label\": \"controlled\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ControlledCheckbox, \"Ki7gOHTbTunXeg9fdgpwE+3ZzBQ=\");\n\n_c = ControlledCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlledCheckbox\");","map":{"version":3,"names":["React","Checkbox","updateTask","ControlledCheckbox","id","status","onUpdatePost","posts","checked","setChecked","useState","handleChangeCheckBox","e","target","newPosts","map","post","_id","completed","console","log","error"],"sources":["/Users/quocdang/Desktop/ToDo/src/container/Home/UpdateTask/CheckBox.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { updateTask } from \"./until\";\nimport HomePage from \"..\";\nimport axios from \"axios\";\n\nexport default function ControlledCheckbox({\n  id,\n  status,\n  onUpdatePost,\n  posts,\n}: any) {\n  const [checked, setChecked] = React.useState(status);\n\n  const handleChangeCheckBox = async (e) => {\n    setChecked(e.target.checked);\n\n    const newPosts = posts.map(post => {\n      if (post._id === id) {\n        post.completed = true\n        status = post.completed \n        console.log(\"abcd\");\n      } else {\n        post.completed = true\n        status = post.completed\n      }\n      return post\n    });\n    \n    onUpdatePost(newPosts);\n    try {\n      await updateTask(id, status);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n    console.log(\"statusss\", status);\n  };\n\n  return (\n    <div>\n      <Checkbox\n        checked={checked}\n        onChange={handleChangeCheckBox}\n        // onClick={handleUpdatePosts}\n        inputProps={{ \"aria-label\": \"controlled\" }}\n      />\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,SAA3B;;AAIA,eAAe,SAASC,kBAAT,OAKP;EAAA;;EAAA,IALmC;IACzCC,EADyC;IAEzCC,MAFyC;IAGzCC,YAHyC;IAIzCC;EAJyC,CAKnC;EACN,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,KAAK,CAACU,QAAN,CAAeL,MAAf,CAA9B;;EAEA,MAAMM,oBAAoB,GAAG,MAAOC,CAAP,IAAa;IACxCH,UAAU,CAACG,CAAC,CAACC,MAAF,CAASL,OAAV,CAAV;IAEA,MAAMM,QAAQ,GAAGP,KAAK,CAACQ,GAAN,CAAUC,IAAI,IAAI;MACjC,IAAIA,IAAI,CAACC,GAAL,KAAab,EAAjB,EAAqB;QACnBY,IAAI,CAACE,SAAL,GAAiB,IAAjB;QACAb,MAAM,GAAGW,IAAI,CAACE,SAAd;QACAC,OAAO,CAACC,GAAR,CAAY,MAAZ;MACD,CAJD,MAIO;QACLJ,IAAI,CAACE,SAAL,GAAiB,IAAjB;QACAb,MAAM,GAAGW,IAAI,CAACE,SAAd;MACD;;MACD,OAAOF,IAAP;IACD,CAVgB,CAAjB;IAYAV,YAAY,CAACQ,QAAD,CAAZ;;IACA,IAAI;MACF,MAAMZ,UAAU,CAACE,EAAD,EAAKC,MAAL,CAAhB;IACD,CAFD,CAEE,OAAOgB,KAAP,EAAc;MACdF,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;IACD;;IACDF,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBf,MAAxB;EACD,CAtBD;;EAwBA,oBACE;IAAA,uBACE,QAAC,QAAD;MACE,OAAO,EAAEG,OADX;MAEE,QAAQ,EAAEG,oBAFZ,CAGE;MAHF;MAIE,UAAU,EAAE;QAAE,cAAc;MAAhB;IAJd;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GA1CuBR,kB;;KAAAA,kB"},"metadata":{},"sourceType":"module"}