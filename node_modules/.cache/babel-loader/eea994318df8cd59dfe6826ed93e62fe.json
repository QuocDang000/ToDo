{"ast":null,"code":"var _jsxFileName = \"/Users/quocdang/Desktop/ToDo/src/container/Home/UpdateTask/CheckBox.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport { updateTask } from './until';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ControlledCheckbox(props) {\n  _s();\n\n  const {} = props;\n  const [checked, setChecked] = React.useState(status);\n  console.log('ControlledCheckbox', status);\n\n  const handleChange = async event => {\n    setChecked(event.target.checked);\n    console.log('id', id);\n\n    try {\n      const response = await updateTask(id, status); // console.log(\"response file index\", response.data.data.completed);\n\n      const boolean = response.data.data.completed; // console.log(\"boolean\", boolean);\n      // setChecked(boolean);\n      // console.log('id' ,id);\n      // console.log('stt', status)\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Checkbox, {\n    checked: checked,\n    onChange: handleChange,\n    inputProps: {\n      'aria-label': 'controlled'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ControlledCheckbox, \"Ki7gOHTbTunXeg9fdgpwE+3ZzBQ=\");\n\n_c = ControlledCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlledCheckbox\");","map":{"version":3,"names":["React","Checkbox","updateTask","ControlledCheckbox","props","checked","setChecked","useState","status","console","log","handleChange","event","target","id","response","boolean","data","completed","error"],"sources":["/Users/quocdang/Desktop/ToDo/src/container/Home/UpdateTask/CheckBox.tsx"],"sourcesContent":["import * as React from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport { updateTask } from './until';\n\nexport default function ControlledCheckbox(props: any) {\n  const {  } = props\n  const [checked, setChecked] = React.useState(status);\n  console.log('ControlledCheckbox', status);\n  \n\n  const handleChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    setChecked(event.target.checked);\n    \n    console.log('id' ,id);\n\n    try {\n      const response = await updateTask(id, status);\n    \n      // console.log(\"response file index\", response.data.data.completed);\n      const boolean = response.data.data.completed\n      // console.log(\"boolean\", boolean);\n\n      // setChecked(boolean);\n      // console.log('id' ,id);\n      // console.log('stt', status)\n      \n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n\n  return (\n    <Checkbox\n      checked={checked}\n      onChange={handleChange}\n      inputProps={{ 'aria-label': 'controlled' }}\n    />\n  );\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,SAA3B;;AAEA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAwC;EAAA;;EACrD,MAAM,KAAOA,KAAb;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,KAAK,CAACO,QAAN,CAAeC,MAAf,CAA9B;EACAC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,MAAlC;;EAGA,MAAMG,YAAY,GAAG,MAAOC,KAAP,IAAsD;IACzEN,UAAU,CAACM,KAAK,CAACC,MAAN,CAAaR,OAAd,CAAV;IAEAI,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBI,EAAlB;;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,UAAU,CAACY,EAAD,EAAKN,MAAL,CAAjC,CADE,CAGF;;MACA,MAAMQ,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBC,SAAnC,CAJE,CAKF;MAEA;MACA;MACA;IAED,CAXD,CAWE,OAAOC,KAAP,EAAc;MACdV,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBS,KAArB;IACD;EACF,CAnBD;;EAqBA,oBACE,QAAC,QAAD;IACE,OAAO,EAAEd,OADX;IAEE,QAAQ,EAAEM,YAFZ;IAGE,UAAU,EAAE;MAAE,cAAc;IAAhB;EAHd;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAlCuBR,kB;;KAAAA,kB"},"metadata":{},"sourceType":"module"}