{"ast":null,"code":"var _jsxFileName = \"/Users/quocdang/Desktop/ToDo/src/container/Home/UpdateTask/CheckBox.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { updateTask } from \"./until\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ControlledCheckbox(_ref) {\n  _s();\n\n  let {\n    id,\n    status,\n    onUpdatePost\n  } = _ref;\n  const [checked, setChecked] = React.useState(status);\n\n  const handleChangeCheckBox = async e => {\n    setChecked(e.target.checked); // status = newPost;\n\n    try {\n      await updateTask(id, status);\n    } catch (error) {\n      console.log(\"error\", error);\n    } // console.log(\"statusss\", status);\n\n  };\n\n  const handleUpdatePosts = newPost => {\n    onUpdatePost([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: checked,\n      onChange: handleChangeCheckBox // onClick={handleUpdatePosts}\n      ,\n      inputProps: {\n        \"aria-label\": \"controlled\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ControlledCheckbox, \"Ki7gOHTbTunXeg9fdgpwE+3ZzBQ=\");\n\n_c = ControlledCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlledCheckbox\");","map":{"version":3,"names":["React","Checkbox","updateTask","ControlledCheckbox","id","status","onUpdatePost","checked","setChecked","useState","handleChangeCheckBox","e","target","error","console","log","handleUpdatePosts","newPost"],"sources":["/Users/quocdang/Desktop/ToDo/src/container/Home/UpdateTask/CheckBox.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { updateTask } from \"./until\";\nimport HomePage from \"..\";\nimport axios from \"axios\";\n\nexport default function ControlledCheckbox({ id, status, onUpdatePost }: any) {\n  const [checked, setChecked] = React.useState(status);\n\n  const handleChangeCheckBox = async (e) => {\n    setChecked(e.target.checked);\n    // status = newPost;\n\n    try {\n      await updateTask(id, status);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n    // console.log(\"statusss\", status);\n  };\n\n  const handleUpdatePosts = (newPost) => {\n    onUpdatePost([])\n    \n  };\n\n  return (\n    <div>\n      <Checkbox\n        checked={checked}\n        onChange={handleChangeCheckBox}\n        // onClick={handleUpdatePosts}\n        inputProps={{ \"aria-label\": \"controlled\" }}\n      />\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,SAA3B;;AAIA,eAAe,SAASC,kBAAT,OAA+D;EAAA;;EAAA,IAAnC;IAAEC,EAAF;IAAMC,MAAN;IAAcC;EAAd,CAAmC;EAC5E,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACS,QAAN,CAAeJ,MAAf,CAA9B;;EAEA,MAAMK,oBAAoB,GAAG,MAAOC,CAAP,IAAa;IACxCH,UAAU,CAACG,CAAC,CAACC,MAAF,CAASL,OAAV,CAAV,CADwC,CAExC;;IAEA,IAAI;MACF,MAAML,UAAU,CAACE,EAAD,EAAKC,MAAL,CAAhB;IACD,CAFD,CAEE,OAAOQ,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;IACD,CARuC,CASxC;;EACD,CAVD;;EAYA,MAAMG,iBAAiB,GAAIC,OAAD,IAAa;IACrCX,YAAY,CAAC,EAAD,CAAZ;EAED,CAHD;;EAKA,oBACE;IAAA,uBACE,QAAC,QAAD;MACE,OAAO,EAAEC,OADX;MAEE,QAAQ,EAAEG,oBAFZ,CAGE;MAHF;MAIE,UAAU,EAAE;QAAE,cAAc;MAAhB;IAJd;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GA9BuBP,kB;;KAAAA,kB"},"metadata":{},"sourceType":"module"}