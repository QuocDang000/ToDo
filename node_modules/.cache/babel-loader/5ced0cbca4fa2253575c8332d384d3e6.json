{"ast":null,"code":"var _jsxFileName = \"/Users/quocdang/Desktop/ToDo/src/container/Home/UpdateTask/CheckBox.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport { updateTask } from './until';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ControlledCheckbox(id, status) {\n  _s();\n\n  const [checked, setChecked] = React.useState(status);\n  console.log('statusCheck', checked);\n\n  const handleChange = async event => {\n    setChecked(event.target.checked);\n    console.log('id', id);\n\n    try {\n      const response = await updateTask(id); // console.log(\"response file index\", response.data.data.completed);\n      // const boolean = response.data.data.completed\n      // console.log(\"boolean\", boolean);\n      // setChecked(boolean);\n      // console.log('id' ,id);\n      // console.log('stt', status)\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Checkbox, {\n    checked: checked,\n    onChange: handleChange,\n    inputProps: {\n      'aria-label': 'controlled'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ControlledCheckbox, \"Ki7gOHTbTunXeg9fdgpwE+3ZzBQ=\");\n\n_c = ControlledCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlledCheckbox\");","map":{"version":3,"names":["React","Checkbox","updateTask","ControlledCheckbox","id","status","checked","setChecked","useState","console","log","handleChange","event","target","response","error"],"sources":["/Users/quocdang/Desktop/ToDo/src/container/Home/UpdateTask/CheckBox.tsx"],"sourcesContent":["import * as React from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport { updateTask } from './until';\n\nexport default function ControlledCheckbox(id: any, status: any) {\n  const [checked, setChecked] = React.useState(status);\n  console.log('statusCheck', checked);\n  \n\n  const handleChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    setChecked(event.target.checked);\n    \n    console.log('id' ,id);\n\n    try {\n      const response = await updateTask(id);\n    \n      // console.log(\"response file index\", response.data.data.completed);\n      // const boolean = response.data.data.completed\n      // console.log(\"boolean\", boolean);\n\n      // setChecked(boolean);\n      // console.log('id' ,id);\n      // console.log('stt', status)\n      \n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n\n  return (\n    <Checkbox\n      checked={checked}\n      onChange={handleChange}\n      inputProps={{ 'aria-label': 'controlled' }}\n    />\n  );\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,SAA3B;;AAEA,eAAe,SAASC,kBAAT,CAA4BC,EAA5B,EAAqCC,MAArC,EAAkD;EAAA;;EAC/D,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,KAAK,CAACQ,QAAN,CAAeH,MAAf,CAA9B;EACAI,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BJ,OAA3B;;EAGA,MAAMK,YAAY,GAAG,MAAOC,KAAP,IAAsD;IACzEL,UAAU,CAACK,KAAK,CAACC,MAAN,CAAaP,OAAd,CAAV;IAEAG,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBN,EAAlB;;IAEA,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMZ,UAAU,CAACE,EAAD,CAAjC,CADE,CAGF;MACA;MACA;MAEA;MACA;MACA;IAED,CAXD,CAWE,OAAOW,KAAP,EAAc;MACdN,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBK,KAArB;IACD;EACF,CAnBD;;EAqBA,oBACE,QAAC,QAAD;IACE,OAAO,EAAET,OADX;IAEE,QAAQ,EAAEK,YAFZ;IAGE,UAAU,EAAE;MAAE,cAAc;IAAhB;EAHd;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAjCuBR,kB;;KAAAA,kB"},"metadata":{},"sourceType":"module"}