{"ast":null,"code":"var _jsxFileName = \"/Users/quocdang/Desktop/ToDo/src/container/Home/UpdateTask/CheckBox.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { updateTask } from \"./until\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ControlledCheckbox(_ref) {\n  _s();\n\n  let {\n    id,\n    status,\n    newPost\n  } = _ref;\n  const [checked, setChecked] = React.useState(status);\n  const [success, setSuccess] = React.useState(false);\n\n  const handleChangeCheckBox = async e => {\n    setChecked(e.target.checked);\n\n    try {\n      const response = await updateTask(id, status);\n      setSuccess(true);\n      console.log('response', response);\n      console.log('responseRe', response.data.data.completed);\n\n      newPost = () => {\n        if (response.data.data.completed === false) {\n          response.data.data.completed = true;\n          return response;\n        }\n      };\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n\n    const newPost = () => {\n      if (response.data.data.completed === false) {\n        response.data.data.completed = true;\n      }\n    };\n\n    console.log('newPost', newPost);\n  }; // const handleUpdatePost = () => {\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: checked,\n      onChange: handleChangeCheckBox,\n      inputProps: {\n        \"aria-label\": \"controlled\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ControlledCheckbox, \"1RtHCRwoMI7JZLburddS0ZgB+VA=\");\n\n_c = ControlledCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlledCheckbox\");","map":{"version":3,"names":["React","Checkbox","updateTask","ControlledCheckbox","id","status","newPost","checked","setChecked","useState","success","setSuccess","handleChangeCheckBox","e","target","response","console","log","data","completed","error"],"sources":["/Users/quocdang/Desktop/ToDo/src/container/Home/UpdateTask/CheckBox.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { updateTask } from \"./until\";\n\nexport default function ControlledCheckbox({\n  id,\n  status,\n  newPost,\n}: any) {\n  const [checked, setChecked] = React.useState(status);\n  \n  const [success, setSuccess] = React.useState(false);\n\n  const handleChangeCheckBox = async (e) => {\n    setChecked(e.target.checked);\n    try {\n      const response = await updateTask(id, status);\n      setSuccess(true);\n      console.log('response', response);\n      console.log('responseRe', response.data.data.completed);\n  \n      newPost = () => {\n        if(response.data.data.completed === false) {\n          response.data.data.completed  = true\n          return response\n        }\n      }\n      \n    } catch (error) {\n      console.log(\"error\", error);\n    }\n\n    const newPost = () => {\n      if(response.data.data.completed === false) {\n        response.data.data.completed  = true\n      }\n    }\n  \n    console.log('newPost', newPost);\n    \n  };\n\n  // const handleUpdatePost = () => {\n    \n  // }\n\n\n  return (\n    <div>\n      <Checkbox\n        checked={checked}\n        onChange={handleChangeCheckBox}\n        inputProps={{ \"aria-label\": \"controlled\" }}\n      />\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,SAA3B;;AAEA,eAAe,SAASC,kBAAT,OAIP;EAAA;;EAAA,IAJmC;IACzCC,EADyC;IAEzCC,MAFyC;IAGzCC;EAHyC,CAInC;EACN,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACS,QAAN,CAAeJ,MAAf,CAA9B;EAEA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACS,QAAN,CAAe,KAAf,CAA9B;;EAEA,MAAMG,oBAAoB,GAAG,MAAOC,CAAP,IAAa;IACxCL,UAAU,CAACK,CAAC,CAACC,MAAF,CAASP,OAAV,CAAV;;IACA,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMb,UAAU,CAACE,EAAD,EAAKC,MAAL,CAAjC;MACAM,UAAU,CAAC,IAAD,CAAV;MACAK,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;MACAC,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBC,SAA7C;;MAEAb,OAAO,GAAG,MAAM;QACd,IAAGS,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBC,SAAnB,KAAiC,KAApC,EAA2C;UACzCJ,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBC,SAAnB,GAAgC,IAAhC;UACA,OAAOJ,QAAP;QACD;MACF,CALD;IAOD,CAbD,CAaE,OAAOK,KAAP,EAAc;MACdJ,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,KAArB;IACD;;IAED,MAAMd,OAAO,GAAG,MAAM;MACpB,IAAGS,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBC,SAAnB,KAAiC,KAApC,EAA2C;QACzCJ,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBC,SAAnB,GAAgC,IAAhC;MACD;IACF,CAJD;;IAMAH,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBX,OAAvB;EAED,CA3BD,CALM,CAkCN;EAEA;;;EAGA,oBACE;IAAA,uBACE,QAAC,QAAD;MACE,OAAO,EAAEC,OADX;MAEE,QAAQ,EAAEK,oBAFZ;MAGE,UAAU,EAAE;QAAE,cAAc;MAAhB;IAHd;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GApDuBT,kB;;KAAAA,kB"},"metadata":{},"sourceType":"module"}